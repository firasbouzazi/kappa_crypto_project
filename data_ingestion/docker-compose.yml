version: "2.4"

services:
  #################################################################
  ##                           ZOOKEEPER                         ##
  #################################################################
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    mem_limit: 512M

  #################################################################
  ##                            KAFKA                            ##
  #################################################################
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: [ "CMD-SHELL", "echo > /dev/tcp/localhost/9092" ]
      interval: 10s
      timeout: 5s
      retries: 5
    mem_limit: 512M

  #################################################################
  ##                           KAFDROP                           ##
  #################################################################
  kafdrop:
    image: obsidiandynamics/kafdrop:3.30.0
    container_name: kafdrop
    restart: always
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    mem_limit: 256M

  #################################################################
  ##                           PRODUCER                          ##
  #################################################################
  producer:
    build: .
    container_name: crypto-producer
    restart: always
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
    mem_limit: 256M

  #################################################################
  ##                        SPARK MASTER                         ##
  #################################################################
  spark-master:
    image: bitnami/spark:3.5
    container_name: spark-master
    hostname: spark-master
    restart: always
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
    ports:
      - "4040:8080"
      - "7077:7077"
    volumes:
      - ../real_time_processing:/opt/spark-app
    networks:
      - default

  #################################################################
  ##                        SPARK WORKER 1                       ##
  #################################################################
  spark-worker-1:
    image: bitnami/spark:3.5
    container_name: spark-worker-1
    restart: always
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    networks:
      - default

  #################################################################
  ##                         CASSANDRA                          ##
  #################################################################
  cassandra:
    image: cassandra:latest
    container_name: cassandra1
    restart: always
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_SEEDS=cassandra1
      - MAX_HEAP_SIZE=1024M
      - HEAP_NEWSIZE=512M
      - CASSANDRA_CLUSTER_NAME=crypto_cluster
      - CASSANDRA_NUM_TOKENS=16
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: [ "CMD-SHELL", "cqlsh -e 'DESCRIBE KEYSPACES'" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - default

  #################################################################
  ##                      CASSANDRA SETUP                        ##
  #################################################################
  cassandra-setup:
    image: cassandra:latest
    container_name: cassandra-setup
    depends_on:
      cassandra:
        condition: service_healthy
    entrypoint: [ "sh", "-c", "cqlsh cassandra -f /cassandra-init/init.cql" ]
    volumes:
      - ../cassandra-init:/cassandra-init
    networks:
      - default

  #################################################################
  ##                    SPARK STREAMING JOB                      ##
  #################################################################
  spark-streaming:
    build:
      context: ../real_time_processing
    container_name: spark-streaming
    restart: always
    depends_on:
      - spark-master
      - kafka
      - cassandra
    environment:
      - SPARK_CASSANDRA_CONNECTION_HOST=cassandra1
    networks:
      - default

volumes:
  cassandra_data:


networks:
  default:
    driver: bridge