version: "3.8"

services:
  #################################################################
  ##                           ZOOKEEPER                         ##
  #################################################################
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  #################################################################
  ##                            KAFKA                            ##
  #################################################################
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      retries: 5
      timeout: 5s

  #################################################################
  ##                           KAFDROP                           ##
  #################################################################
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"

  #################################################################
  ##                           PRODUCER                          ##
  #################################################################
  producer:
    build: .
    container_name: crypto-producer
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: "kafka:9092"

  #################################################################
  ##                        SPARK MASTER                         ##
  #################################################################
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    hostname: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
    ports:
      - "8080:8080" # UI du Spark Master
      - "7077:7077" # Port de connexion des Workers
    volumes:
      # Monte ton dossier local contenant tes scripts Spark (ex: spark_streaming.py)
      - /home/chouaieb/big_data_project/kappa_crypto_project/real_time_processing:/opt/spark-app
    networks:
      - default

  #################################################################
  ##                        SPARK WORKER 1                       ##
  #################################################################
  spark-worker-1:
    image: bitnami/spark:latest
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    networks:
      - default

  #################################################################
  ##                        SPARK WORKER 2                       ##
  #################################################################
  spark-worker-2:
    image: bitnami/spark:latest
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    networks:
      - default

networks:
  default:
    driver: bridge
